package com.thg.accelerator.flatfish.transformer;


import com.thg.accelerator.flatfish.dto.SavedProfileDto;
import com.thg.accelerator.flatfish.dto.UserDto;
import com.thg.accelerator.flatfish.entities.SavedProfileEntity;
import com.thg.accelerator.flatfish.entities.UserEntity;

public class Transformer {
    public static UserDto transformUserEntityToDto(UserEntity userEntity) {
        return new UserDto(userEntity.getUserId(), userEntity.getName(), userEntity.getBirthday(), userEntity.getAge(),
                userEntity.getDescription(), userEntity.getUserGender(), userEntity.getInstagram(),
                userEntity.getBudgetMin(), userEntity.getBudgetMax(), userEntity.getAgeMin(),
                userEntity.getAgeMax(), userEntity.getGender(), userEntity.getLocationEntities(), userEntity.getSavedProfilesEntitiesList());
    }

    public static UserEntity transformUserDtoToEntity(UserDto userDto) {
        return new UserEntity(userDto.getUserId(), userDto.getName(), userDto.getBirthday(), userDto.getAge(),
                userDto.getDescription(), userDto.getUserGender(), userDto.getInstagram(),
                userDto.getBudgetMin(), userDto.getBudgetMax(), userDto.getAgeMin(),
                userDto.getAgeMax(), userDto.getGender(), userDto.getLocationsEntities(), userDto.getSavedProfileEntities());
    }

    public static SavedProfileDto transformSavedProfileEntityToDto(SavedProfileEntity savedProfileEntity){
        return new SavedProfileDto(savedProfileEntity.getSavedUserId(), savedProfileEntity.getUserEntity().getUserId());
    }

    public static SavedProfileEntity transformSavedProfileDtoToEntity(SavedProfileDto savedProfileDto){
        SavedProfileEntity savedProfileEntity = new SavedProfileEntity();
        savedProfileEntity.setSavedUserId(savedProfileDto.getSavedProfileId());
        // Set the user entity based on saved profile dto
        // You may need to fetch the user entity from the database based on the userId in the dto
        // Example: savedProfileEntity.setUserEntity(userService.getUserById(savedProfileDto.getUserId()).orElse(null));
        return savedProfileEntity;
    }




}

    // TODO: Check if there needs to be an additional method for an incoming UserDto with no id (generated by UserEntity)
